version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mytaskhub
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mytaskhub-network

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - "3001:3001"
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/mytaskhub
      - JWT_SECRET=your_jwt_secret_key
      - PORT=3001
      - NODE_ENV=development
    depends_on:
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
      - /app/packages/backend/node_modules
      - /app/packages/common/node_modules
    working_dir: /app/packages/backend
    command: npm run start:dev
    networks:
      - mytaskhub-network

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NODE_ENV=development
    depends_on:
      - backend
    volumes:
      - ./packages/frontend:/app/packages/frontend
      - ./packages/common:/app/packages/common
      - /app/packages/frontend/node_modules
      - /app/packages/common/node_modules
    command: npm run dev --workspace=@mytaskhub/frontend
    networks:
      - mytaskhub-network

networks:
  mytaskhub-network:
    driver: bridge

volumes:
  postgres-data:
